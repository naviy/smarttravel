// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.2.1
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18034
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Luxena.Travel.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.2.1")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Person")]
    public partial class PersonFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Person.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Person", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("the user has logged in as Agent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("the user has selected menu item \"Справочники->Персоны\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a new person")]
        public virtual void CreateANewPerson()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a new person", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 10
 testRunner.When("the user is going to begin to create Person", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "Value"});
            table1.AddRow(new string[] {
                        "Наименование",
                        "Новый пользователь"});
            table1.AddRow(new string[] {
                        "ФИО",
                        "Иванов Иван Иванович"});
            table1.AddRow(new string[] {
                        "Дата рождения",
                        "28.03.2012"});
            table1.AddRow(new string[] {
                        "Юридический адрес",
                        "Юридический адрес"});
            table1.AddRow(new string[] {
                        "Фактический адрес",
                        "Фактический адрес"});
            table1.AddRow(new string[] {
                        "Телефоны",
                        "444-44-44"});
            table1.AddRow(new string[] {
                        "E-mail адреса",
                        "test@google.com"});
            table1.AddRow(new string[] {
                        "Факс",
                        "555-55-55"});
            table1.AddRow(new string[] {
                        "Веб адрес",
                        "www.test.com.ua"});
            table1.AddRow(new string[] {
                        "Примечание",
                        "Тестовый пользователь"});
#line 11
 testRunner.And("the user fills out the form as follows", ((string)(null)), table1, "And ");
#line 23
 testRunner.And("the user presses \"создать\" to create mileage card", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.Then("the system opens form \"Мильная карточка (создание)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "Value"});
            table2.AddRow(new string[] {
                        "Номер",
                        "123"});
#line 26
 testRunner.When("the user fills out the form as follows", ((string)(null)), table2, "When ");
#line 29
 testRunner.And("the user presses \"Сохранить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("the system closes the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.When("the user presses \"создать\" to create passport", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("the system opens form \"Паспорт (создание)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "Value"});
            table3.AddRow(new string[] {
                        "Номер",
                        "passport 111"});
            table3.AddRow(new string[] {
                        "Имя",
                        "Иван"});
            table3.AddRow(new string[] {
                        "Отчество",
                        "Иванович"});
            table3.AddRow(new string[] {
                        "Фамилия",
                        "Иванов"});
            table3.AddRow(new string[] {
                        "Дата рождения",
                        "02.11.1971"});
            table3.AddRow(new string[] {
                        "Действителен до",
                        "02.11.2020"});
            table3.AddRow(new string[] {
                        "Примечание",
                        "К службе в ВС годен"});
#line 35
 testRunner.When("the user fills out the form as follows", ((string)(null)), table3, "When ");
#line 44
 testRunner.And("the user presses \"Сохранить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("the system closes the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
 testRunner.When("the user presses \"Сохранить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.Then("the system closes the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.And("the system shows notification \"Персоны: добавлено Новый пользователь\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.When("the user presses \"изменить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("the system opens form \"Персона (редактирование)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a new person without required fields")]
        public virtual void CreateANewPersonWithoutRequiredFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a new person without required fields", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 56
 testRunner.When("the user is going to begin to create Person", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "Value"});
            table4.AddRow(new string[] {
                        "Наименование",
                        ""});
#line 57
 testRunner.And("the user fills out the form as follows", ((string)(null)), table4, "And ");
#line 60
 testRunner.And("the user presses \"Сохранить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("the system shows validation message \"Наименование: Это поле обязательно для запол" +
                    "нения\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete a person")]
        public virtual void DeleteAPerson()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete a person", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 65
 testRunner.When("the user selects \"Петров Петр Петрович\" in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.And("the user presses \"удалить\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.Then("the system shows confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
 testRunner.When("the user presses at confirmation dialog \"Да\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("the system shows notification \"Персоны: удалено Пользователь для удаления\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
